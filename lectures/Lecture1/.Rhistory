install.packages("revealjs")
require("tidyquant")
install.packages("tidyquant")
require("tidyquant")
tq_get("NFLX", get = "stock.prices")
netflix <- tq_get("NFLX", get = "stock.prices")
?geom_bbands
ggplot(data = netflix) +
geom_line(aes(y=close, x=date))
netflix <- tq_get("MSFT", get = "stock.prices")
ggplot(data = netflix) +
geom_line(aes(y=close, x=date))
netflix <- tq_get("NFLX", get = "stock.prices")
ggplot(data = netflix) +
geom_line(aes(y=close, x=date))
month_ret <- sp_500 %>%
group_by(symbol) %>%
tq_transmute(adjusted, mutate_fun = monthlyReturn)
sp_500 <- tq_index("SP500") %>% tq_get(get="stock.prices")
sp_500 <- tq_index("SP500") %>% tq_get(get="stock.prices")
netflix <- tq_get("NFLX", get = "stock.prices")
ggplot(data = netflix) +
geom_line(aes(y=close, x=date))
netflix <- tq_get("MSFT", get = "stock.prices")
ggplot(data = netflix) +
geom_line(aes(y=close, x=date))
tq_index()
install.packages("XLConnect")
sp_500 <- tq_index("SP500") %>% tq_get(get="stock.prices")
library(XLConnect)
install.packages("XLConnectJars")
library(XLConnect)
library(XLConnectJars)
install.packages("XLConnect", dependencies = TRUE)
library(XLConnect)
library(XLConnectJars)
install.packages("XLConnectJars", dependencies = TRUE)
library(XLConnect)
library(XLConnectJars)
install_github("xlconnect", username = "miraisolutions", ref = "master")
install.packages("XLConnect")
library(XLConnectJars)
library(XLConnect)
ggplot(data = netflix) +
geom_line(aes(y=close, x=date))
netflix <- tq_get("APRN", get = "stock.prices")
ggplot(data = netflix) +
geom_line(aes(y=close, x=date))
ggplot(data = netflix) +
geom_line(aes(y=close, x=date)) +
theme_tq_dark()
ggplot(data = netflix) +
geom_line(aes(y=close, x=date)) +
theme_tq()
ggplot(data = netflix) +
geom_line(aes(y=close, x=date)) +
theme_tq() +
theme(text = element_text(size=20))
netflix <- tq_get("*VIX", get = "stock.prices")
netflix <- tq_get("^VIX", get = "stock.prices")
ggplot(data = netflix) +
geom_line(aes(y=close, x=date)) +
theme_tq() +
theme(text = element_text(size=20))
knitr::opts_chunk$set(echo = FALSE)
us_holdings <- read_csv("fof_data.csv")
us_holdings
g <- ggplot(data=us_holdings %>% filter(variable == "total financial assets")) + geom_col(aes(x=institution, y= estimate))
g
g <- ggplot(data=us_holdings %>% filter(variable == "total financial assets")) +
geom_col(aes(x=institution, y= estimate)) +
coord_flip() +
theme_minimal()
g
g <- ggplot(data=us_holdings %>% filter(variable == "total financial assets")) +
geom_col(aes(x=institution, y= estimate)) +
coord_flip() +
theme_minimal() +
theme(text = element_text(size=20))
library(tidyverse)
image(g)
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(fig.width = 8, collapse = TRUE)
library(tidyverse)
ggplot(data=us_holdings %>% filter(variable == "total financial assets")) +
geom_col(aes(x=institution, y= estimate)) +
coord_flip() +
theme_minimal() +
theme(text = element_text(size=20)) +
ylab("Billions of USD")
```{r, echo=FALSE, fig.cap="Distribution of Total Financial Assets by Institution"}
?fig.pos
us_holdings
factor(us_holdings$institution)
factor(us_holdings$variable)
us_holdings %>%
filter(variable %in% c( "total financial assets", "debt securities", "equities")) %>%
mutate(variable = factor(variable, levels=c("Total Financial Assets","Bond Holdings","Equity Holdings"))))
us_holdings %>%
filter(variable %in% c( "total financial assets", "debt securities", "equities")) %>%
mutate(variable = factor(variable, levels=c("Total Financial Assets","Bond Holdings","Equity Holdings")))
install.packages("extrafont")
library(extrafont)
font_import()
fonts()
loadfonts(device = "osx")
loadfonts()
knitr::opts_chunk$set(echo = FALSE)
library(tidyverse)
mf_expenses <- read_csv("mutual_fund_expenses.csv")
global_holdings <- tibble(estimate = c(21, 19, 18, 3, 2, 1),
institution = c("Pension Funds", "Mutual Funds", "Insurance Funds",
"Sovereign Wealth Funds", "Hedge Funds", "Private Equity"))
library(tidyverse)
global_holdings <- tibble(estimate = c(21, 19, 18, 3, 2, 1),
institution = c("Pension Funds", "Mutual Funds", "Insurance Funds",
"Sovereign Wealth Funds", "Hedge Funds", "Private Equity"))
global_holdings
ggplot(data=global_holdings) +
geom_col(aes(x=institution, y= estimate, fill=institution)) +
coord_flip() +
theme_minimal() +
theme(text = element_text(size=18,
family="News Cycle")) +
scale_fill_viridis_d(guide=FALSE) +
scale_x_discrete(labels = ylabels) +
ylab("Trillions of USD") +
xlab("") +
facet_wrap(~variable)
ylabels <- c("Pension Funds",
"Life Insurance Companies",
"Mutual Funds",
"Private Pension Funds",
"Property-Casualty Insurance",
"Gov't Retirement Funds")
ggplot(data=global_holdings) +
geom_col(aes(x=institution, y= estimate, fill=institution)) +
coord_flip() +
theme_minimal() +
theme(text = element_text(size=18,
family="News Cycle")) +
scale_fill_viridis_d(guide=FALSE) +
scale_x_discrete(labels = ylabels) +
ylab("Trillions of USD") +
xlab("") +
facet_wrap(~variable)
global_holdings <- tibble(estimate = c(21, 19, 18, 3, 2, 1),
institution = c("Pension Funds", "Mutual Funds", "Insurance Funds",
"Sovereign Wealth Funds", "Hedge Funds", "Private Equity"))
global_holdings <- global_holdings %>% mutate(institution = factor(institution))
global_holdings
knitr::opts_chunk$set(echo = FALSE)
library(tidyverse)
ylabels <- c("Pension Funds",
"Life Insurance Companies",
"Mutual Funds",
"Private Pension Funds",
"Property-Casualty Insurance",
"Gov't Retirement Funds")
ggplot(data=global_holdings) +
geom_col(aes(x=institution, y= estimate, fill=institution)) +
coord_flip() +
theme_minimal() +
theme(text = element_text(size=18,
family="News Cycle")) +
scale_fill_viridis_d(guide=FALSE) +
ylab("Trillions of USD") +
xlab("")
global_holdings <- tibble(estimate = c(21, 19, 18, 3, 2, 1),
institution = c("Pension Funds", "Mutual Funds", "Insurance Funds",
"Sovereign Wealth Funds", "Hedge Funds", "Private Equity"))
global_holdings <- global_holdings %>% mutate(institution = factor(institution)) %>%
mutate(global_holdings = fct_reorder(institution, estimate))
ylabels <- c("Pension Funds",
"Life Insurance Companies",
"Mutual Funds",
"Private Pension Funds",
"Property-Casualty Insurance",
"Gov't Retirement Funds")
ggplot(data=global_holdings) +
geom_col(aes(x=institution, y= estimate, fill=institution)) +
coord_flip() +
theme_minimal() +
theme(text = element_text(size=18,
family="News Cycle")) +
scale_fill_viridis_d(guide=FALSE) +
ylab("Trillions of USD") +
xlab("")
global_holdings
global_holdings <- global_holdings %>% mutate(institution = factor(institution)) %>%
mutate(institution = fct_reorder(institution, estimate))
global_holdings <- tibble(estimate = c(21, 19, 18, 3, 2, 1),
institution = c("Pension Funds", "Mutual Funds", "Insurance Funds",
"Sovereign Wealth Funds", "Hedge Funds", "Private Equity"))
global_holdings <- global_holdings %>% mutate(institution = factor(institution)) %>%
mutate(institution = fct_reorder(institution, estimate))
ylabels <- c("Pension Funds",
"Life Insurance Companies",
"Mutual Funds",
"Private Pension Funds",
"Property-Casualty Insurance",
"Gov't Retirement Funds")
ggplot(data=global_holdings) +
geom_col(aes(x=institution, y= estimate, fill=institution)) +
coord_flip() +
theme_minimal() +
theme(text = element_text(size=18,
family="News Cycle")) +
scale_fill_viridis_d(guide=FALSE) +
ylab("Trillions of USD") +
xlab("")
library(readr)
malkiel_persistence <- read_csv("~/Dropbox/Teaching/MGT544Spring2019/Class Lectures/Data/malkiel_persistence.csv",
col_types = cols(initial_year = col_integer()))
View(malkiel_persistence)
ggplot(data = malkiel_persistence, aes(y = repeat_winner_share, x =year)) +
geom_col()
ggplot(data = malkiel_persistence, aes(y = repeat_winner_share, x =initial_year)) +
geom_col()
ggplot(data = malkiel_persistence, aes(y = repeat_winner_share, x =initial_year)) +
geom_col() +
theme_minimal() +
theme(text = element_text(size=18,
family="News Cycle")) +
ylab("") +
xlab("") +
scale_fill_viridis_d(guide=FALSE) +
ggtitle("S&P 500 minus Mutual Fund Average")
ggplot(data = malkiel_persistence, aes(y = repeat_winner_share, x =initial_year)) +
geom_col() +
theme_minimal() +
theme(text = element_text(size=18,
family="News Cycle")) +
ylab("") +
xlab("") +
scale_fill_viridis_d(guide=FALSE) +
ggtitle("Share of Winners who repeat in subsequent years")
ggplot(data = malkiel_persistence, aes(y = repeat_winner_share, x =initial_year)) +
geom_col() +
theme_minimal() +
theme(text = element_text(size=18,
family="News Cycle")) +
ylab("") +
xlab("") +
scale_fill_viridis_d(guide=FALSE) +
ggtitle("Share of 'winners' who repeat in subsequent year")
ggplot(data = malkiel_persistence, aes(y = repeat_winner_share, x =initial_year)) +
geom_col() +
theme_minimal() +
theme(text = element_text(size=18,
family="News Cycle")) +
ylab("") +
xlab("") +
scale_fill_viridis_d(guide=FALSE) +
ggtitle("Share of `winners' who repeat in subsequent year")
ggplot(data=mf_expenses %>% mutate(expenses = `expense ratios` * 100)) +
geom_col(aes(x=Year, y= expenses), fill = "#0f4d92") +
geom_text(aes(label=expenses, x=Year, y=expenses+5)) +
theme_minimal() +
theme(text = element_text(size=18,
family="News Cycle")) +
ylab("") +
xlab("")
library(viridis)
mf_expenses <- read_csv("../Data/mutual_fund_expenses.csv")
ggplot(data=mf_expenses %>% mutate(expenses = `expense ratios` * 100)) +
geom_col(aes(x=Year, y= expenses), fill = "#0f4d92") +
geom_text(aes(label=expenses, x=Year, y=expenses+5)) +
theme_minimal() +
theme(text = element_text(size=18,
family="News Cycle")) +
ylab("") +
xlab("")
ggplot(data = malkiel_persistence, aes(y = repeat_winner_share, x =initial_year)) +
geom_col( fill = "#0f4d92") +
theme_minimal() +
theme(text = element_text(size=18,
family="News Cycle")) +
ylab("") +
xlab("") +
scale_fill_viridis_d(guide=FALSE) +
ggtitle("Share of 'winners' who repeat in subsequent year")
ggplot(data = malkiel_persistence, aes(y = repeat_winner_share, x =initial_year)) +
geom_col( fill = "#0f4d92") +
theme_minimal() +
theme(text = element_text(size=18,
family="News Cycle")) +
ylab("") +
geom_hline(intercept=50) +
xlab("") +
scale_fill_viridis_d(guide=FALSE) +
ggtitle("Share of 'winners' who repeat in subsequent year")
ggplot(data = malkiel_persistence, aes(y = repeat_winner_share, x =initial_year)) +
geom_col( fill = "#0f4d92") +
theme_minimal() +
theme(text = element_text(size=18,
family="News Cycle")) +
ylab("") +
geom_hline(yintercept=50) +
xlab("") +
scale_fill_viridis_d(guide=FALSE) +
ggtitle("Share of 'winners' who repeat in subsequent year")
library(readxl)
bollen_busse_persistence <- read_excel("~/Dropbox/Teaching/MGT544Spring2019/Class Lectures/Data/bollen_busse_persistence.xlsx")
View(bollen_busse_persistence)
library(readxl)
bollen_busse_persistence <- read_excel("~/Dropbox/Teaching/MGT544Spring2019/Class Lectures/Data/bollen_busse_persistence.xlsx")
ggplot(data = bollen_busse_persistence, aes(y = alpha, x =decile, color=period)) +
geom_line() +
theme_minimal() +
theme(text = element_text(size=18,
family="News Cycle")) +
ylab("") +
geom_hline(yintercept=50) +
xlab("") +
scale_fill_viridis_d(guide=FALSE) +
ggtitle("Share of 'winners' who repeat in subsequent year")
ggplot(data = bollen_busse_persistence, aes(y = alpha, x =decile, color=period)) +
geom_line() +
theme_minimal() +
theme(text = element_text(size=18,
family="News Cycle")) +
ylab("") +
geom_hline(yintercept=0) +
xlab("") +
scale_fill_viridis_d(guide=FALSE) +
ggtitle("Share of 'winners' who repeat in subsequent year")
ggplot(data = bollen_busse_persistence, aes(y = alpha, x =decile, color=period)) +
geom_line() +
theme_minimal() +
theme(text = element_text(size=18,
family="News Cycle")) +
ylab("") +
geom_hline(yintercept=0) +
xlab("") +
ggtitle("Share of 'winners' who repeat in subsequent year")
ggplot(data = bollen_busse_persistence, aes(y = alpha, x =decile, color=period)) +
geom_line() +
theme_minimal() +
theme(text = element_text(size=18,
family="News Cycle")) +
ylab("") +
geom_hline(yintercept=0) +
xlab("") +
scale_color_viridis_d(guide=FALSE) +
ggtitle("Risk-adjusted returns in subsequent quarter")
?scale_color_discrete
ggplot(data = bollen_busse_persistence, aes(y = alpha, x =decile, color=period)) +
geom_line() +
theme_minimal() +
theme(text = element_text(size=18,
family="News Cycle")) +
ylab("") +
geom_hline(yintercept=0) +
xlab("") +
scale_color_discrete(c("black", "blue")) +
ggtitle("Risk-adjusted returns in subsequent quarter")
ggplot(data = bollen_busse_persistence, aes(y = alpha, x =decile, color=period)) +
geom_line() +
theme_minimal() +
theme(text = element_text(size=18,
family="News Cycle")) +
ylab("") +
geom_hline(yintercept=0) +
xlab("") +
scale_color_manual(c("black", "blue")) +
ggtitle("Risk-adjusted returns in subsequent quarter")
ggplot(data = bollen_busse_persistence, aes(y = alpha, x =decile, color=period)) +
geom_line() +
theme_minimal() +
theme(text = element_text(size=18,
family="News Cycle")) +
ylab("") +
geom_hline(yintercept=0) +
xlab("") +
scale_color_manual(values=c("black", "blue")) +
ggtitle("Risk-adjusted returns in subsequent quarter")
ggplot(data = bollen_busse_persistence, aes(y = alpha, x =decile, color=period)) +
geom_line() +
theme_minimal() +
theme(text = element_text(size=18,
family="News Cycle")) +
ylab("") +
geom_hline(yintercept=0) +
xlab("") +
scale_color_manual(values=c("black", "#0f4d92")) +
ggtitle("Risk-adjusted returns in subsequent quarter")
ggplot(data = bollen_busse_persistence, aes(y = alpha, x =decile, color=period)) +
geom_line() +
theme_minimal() +
theme(text = element_text(size=18,
family="News Cycle")) +
ylab("") +
geom_hline(yintercept=0) +
xlab("") +
scale_color_manual(values=c("#c90016", "#0f4d92")) +
ggtitle("Risk-adjusted returns in subsequent quarter")
ggplot(data = bollen_busse_persistence, aes(y = alpha, x =decile, color=period)) +
geom_line() +
theme_minimal() +
theme(text = element_text(size=18,
family="News Cycle")) +
ylab("") +
geom_hline(yintercept=0) +
xlab("") +
scale_x_discrete() +
scale_color_manual(values=c("#c90016", "#0f4d92")) +
ggtitle("Risk-adjusted returns in subsequent quarter")
ggplot(data = bollen_busse_persistence, aes(y = alpha, x =factor(decile), color=period)) +
geom_line() +
theme_minimal() +
theme(text = element_text(size=18,
family="News Cycle")) +
ylab("") +
geom_hline(yintercept=0) +
xlab("") +
scale_x_discrete() +
scale_color_manual(values=c("#c90016", "#0f4d92")) +
ggtitle("Risk-adjusted returns in subsequent quarter")
ggplot(data = bollen_busse_persistence, aes(y = alpha, x =factor(decile), color=period)) +
geom_line() +
theme_minimal() +
theme(text = element_text(size=18,
family="News Cycle")) +
ylab("") +
geom_hline(yintercept=0) +
xlab("") +
scale_color_manual(values=c("#c90016", "#0f4d92")) +
ggtitle("Risk-adjusted returns in subsequent quarter")
ggplot(data = bollen_busse_persistence, aes(y = alpha, x =as.factor(decile), color=period)) +
geom_line() +
theme_minimal() +
theme(text = element_text(size=18,
family="News Cycle")) +
ylab("") +
geom_hline(yintercept=0) +
xlab("") +
scale_color_manual(values=c("#c90016", "#0f4d92")) +
ggtitle("Risk-adjusted returns in subsequent quarter")
ggplot(data = bollen_busse_persistence, aes(y = alpha, x =decile, color=period)) +
geom_line() +
theme_minimal() +
theme(text = element_text(size=18,
family="News Cycle")) +
ylab("") +
geom_hline(yintercept=0) +
xlab("") +
scale_color_manual(values=c("#c90016", "#0f4d92")) +
ggtitle("Risk-adjusted returns in subsequent quarter")
ggplot(data = bollen_busse_persistence, aes(y = alpha, x =decile, color=period)) +
geom_line() +
theme_minimal() +
theme(text = element_text(size=18,
family="News Cycle")) +
ylab("") +
geom_hline(yintercept=0) +
scale_x_date() +
xlab("") +
scale_color_manual(values=c("#c90016", "#0f4d92")) +
ggtitle("Risk-adjusted returns in subsequent quarter")
ggplot(data = bollen_busse_persistence, aes(y = alpha, x =decile, color=period)) +
geom_line() +
theme_minimal() +
theme(text = element_text(size=18,
family="News Cycle")) +
ylab("") +
geom_hline(yintercept=0) +
scale_x_continuous(breaks=seq(1,10)) +
xlab("") +
scale_color_manual(values=c("#c90016", "#0f4d92")) +
ggtitle("Risk-adjusted returns in subsequent quarter")
ggplot(data = bollen_busse_persistence, aes(y = alpha, x =decile, color=period)) +
geom_line() +
theme_minimal() +
theme(text = element_text(size=18,
family="News Cycle")) +
ylab("") +
geom_hline(yintercept=0) +
scale_x_continuous(breaks=seq(1,10)) +
xlab("Performance Decile in Ranking Quarter") +
scale_color_manual(values=c("#c90016", "#0f4d92")) +
ggtitle("Risk-adjusted returns in subsequent quarter")
ggplot(data = bollen_busse_persistence, aes(y = alpha, x =decile, color=period)) +
geom_line(size=2) +
theme_minimal() +
theme(text = element_text(size=18,
family="News Cycle")) +
ylab("") +
geom_hline(yintercept=0) +
scale_x_continuous(breaks=seq(1,10)) +
xlab("Performance Decile in Ranking Quarter") +
scale_color_manual(values=c("#c90016", "#0f4d92")) +
ggtitle("Risk-adjusted returns in subsequent quarter")
